---
import {Image} from "astro:assets"
import {Icon} from '@astrojs/starlight/components';
import type { HTMLAttributes } from 'astro/types';
import githubLangsColor from "@astrojs/starlight/schemas/aiwb/github_lang_colors.json"
import progLangsShortName from "../../assets/data/proglangs_shortname.json"

interface Props extends Omit<HTMLAttributes<'a'>, 'title'> {
    appIcon: object;
    appName: string;
    appTagline: string;
    appDescription?: string;
    developerName: string;
    languages: string[];
    viewCount: number;
    stargazerCount: number;
    developerAvatar: string;
}

const { appIcon, appName, appDescription, appTagline,
    developerName, developerAvatar,
    languages, viewCount, stargazerCount, ...attributes } = Astro.props;
---

<a {...attributes} class="block sl-link-card absolute not-content">
	<div class="flex grow flex-col">
        <div class="flex flex-row items-center">
            <Image src={appIcon} alt={`${appName} icon`} class="w-32pt h-32pt object-c mr-3"/>
            <div class="flex flex-col">
                <div class="flex flex-row items-center">
                    <span class="title" set:html={appName} />
                    <span class="mx-0.5 text-gray-500 opacity-40 dark:text-gray-300 md:mx-1">—</span>
                    <span class="tagline truncate" set:html={appTagline} />
                </div>
                <div class="grid grid-cols-1">
                    {appDescription && <span class="description truncate" set:html={appDescription} />}
                </div>
            </div>
        </div>

        <div class="flex flex-row items-center justify-items-center mt-1">
            <img src={developerAvatar} class="w-10pt h-10pt rounded-full" alt="developer avatar" />
            <span class="text-0.85rem description ml-1">{developerName}</span>
            <span class="mx-0.5 text-gray-500 opacity-40 dark:text-gray-300 md:mx-1">·</span>
            <div class="h-9pt mr-1 rounded-full border-1 border-solid border-zinc-500 flex flex-row overflow-clip">
                {languages.map(l=>(
                    <div style={`background-color: ${githubLangsColor[l]}`} class="w-9pt h-9pt"/>
                ))}
            </div>
            <span class="text-0.85rem description truncate">{languages.map(i=>progLangsShortName[i]??i).join(", ")}</span>
            <span class="mx-0.5 text-gray-500 opacity-40 dark:text-gray-300 md:mx-1">·</span>
            <span class="text-0.85rem description truncate">最后更新 5小时前</span>
            <div class="grow flex flex-row-reverse gap-x-3">
                <div class="flex flex-row items-center" style="color: var(--sl-color-gray-2)">
                    <Icon name="eye"/>
                    <span class="text-0.85rem tagline truncate ml-1">{viewCount}</span>
                </div>
                <div class="flex flex-row items-center" style="color: var(--sl-color-gray-2)">
                    <Icon name="star"/>
                    <span class="text-0.85rem tagline truncate ml-1">{stargazerCount}</span>
                </div>
            </div>
        </div>
	</div>
    <Icon name="right-arrow" size="1.333em" class="icon rtl:flip absolute top-4 right-4" />
</a>

<style>
    .sl-link-card {
        gap: 0.5rem;
        border: 1px solid var(--sl-color-gray-5);
        border-radius: 0.5rem;
        padding: 0.8rem 1rem 0.5rem 1rem;
        box-shadow: var(--sl-shadow-sm);
        position: relative;
    }

    a {
        text-decoration: none;
    }

    .title {
        color: var(--sl-color-white);
        font-weight: 600;
    }

    .description {
        color: var(--sl-color-gray-3);
        line-height: 1.2;
    }

    .tagline {
        color: var(--sl-color-gray-2);
        line-height: 1.2;
    }

    .icon {
        color: var(--sl-color-gray-3);
    }

    /* Hover state */
    .sl-link-card:hover {
        background: var(--sl-color-gray-7, var(--sl-color-gray-6));
        border-color: var(--sl-color-gray-2);
    }

    .sl-link-card:hover .icon {
        color: var(--sl-color-white);
    }
</style>
